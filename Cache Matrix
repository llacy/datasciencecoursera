## First function creates a special "matrix" that is a list with a function
## to set & get the matrix, and set/get the inverse. 

## Second function calculates the inverse after checking to see if the 
## inverse has already been calculated

makeCacheMatrix <- function(x = matrix()) {

  inv <- NULL
  set <- function(y){
        x <<- y
        inv <<- NULL
  }
  get <- function() x
  set_inverse <-function(inverse) inv <<- inverse
  get_inverse <-function() inv
  list(set = set, get = get, set_inverse=set_inverse, get_inverse=get_inverse)
}


## ## Second function calculates the inverse after checking to see if the 
## inverse has already been calculated

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
  inv <- x$get_inverse()
  if(!is.null(inv)){
      message("getting cached data")
      return(inv)
  }
  data <- x$get()
  inv <- solve(data, ...)
  x$set_inverse(inv)
  return(inv)
}
